---

- name: Get public IP
  ipify_facts:
  register: public_ip

- name: Create node.toml
  template: src=node.toml.j2 dest={{ home }}/node.toml owner={{ username }} group={{ username }} mode=0644

- name: Install {{ NODE_PWD }} file
  template: src=node_pwd.j2 dest={{ home }}/{{ NODE_PWD }} owner={{ username }} group={{ username }} mode=0600

- name: Config MOC_KEYFILE file
  copy:
    content: "{{ MOC_KEYFILE }}"
    dest: "{{ home }}/parity_data/keys/{{ GENESIS_NETWORK_NAME }}/{{ username }}.key"

# - name: Clone poanetworks/poa-scripts-moc repo from GitHub
#   git:
#     repo: "https://github.com/{{ MAIN_REPO_FETCH }}/poa-scripts-moc"
#     dest: "{{ home }}/poa-scripts-moc"
#     version: "{{ SCRIPTS_MOC_BRANCH }}"
#     force: yes

# - name: Change owner and group of poa-scripts-moc file
#   file: path={{ home }}/poa-scripts-moc owner={{ username }} group={{ username }} recurse=yes

# - name: install npm initial_keys_script
#   npm:
#     path: "{{ home }}/poa-scripts-moc"
#   become: true
#   become_user: "{{ username }}"

# - name: install npm generateInitialKey
#   npm:
#     path: "{{ home }}/poa-scripts-moc/generateInitialKey"
#   become: true
#   become_user: "{{ username }}"

# - name: install npm distributeTokens
#   npm:
#     path: "{{ home }}/poa-scripts-moc/distributeTokens"
#   become: true
#   become_user: "{{ username }}"

- name: change permission
  file:
    path: /home/{{ username }}
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0744
    recurse: yes

- name: Create getBootnode.sh
  template: src=getBootnode.sh.j2 dest={{ home }}/getBootnode.sh owner={{ username }} group={{ username }} mode=0777
  
- name: getting bootnode
  shell:
    cmd: /home/{{ username }}/getBootnode.sh {{ bootnode_host }}

- pause: seconds=2

- name: remove " from bootnodes
  shell:
    cmd: sed 's/\"//g' /home/{{ username }}/tmp.txt > bootnodes.txt

- pause: seconds=3

- name: restart poa-parity
  service: name=poa-parity state=restarted

- name: Setup ufw firewall
  import_tasks: ufw.yml
  when: install_firewall

- name: restart machine after setup
  shell: shutdown -r 1
  when: reboot_after_completion == true
